# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Thrift
        run: apt-get install -y thrift-dev

      - name: Install Snappy
        run: apt-get install -y snappy-devel

      - name: Get Seastar
        run: git clone https://github.com/scylladb/seastar.git

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DSEASTAR_PATH=${{github.workspace}}/seastar  -DENABLE_PARQUET4SEASTAR_TEST=ON

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: |
          build/tests/byte_stream_split_test          
          build/tests/compression_test
          build/tests/cql_reader_test
          build/tests/delta_binary_packed_test
          build/tests/delta_length_byte_array_test
          build/tests/file_writer_test
          build/tests/rle_encoding_test
          build/tests/thrift_serdes_test_test
          build/tests/column_chunk_writer_test
          build/tests/cql_reader_alltypes_test
          build/tests/delta_byte_array_test
          build/tests/dictionary_encoder_test

